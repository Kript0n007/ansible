name: IaC full pipeline

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  TF_VERSION: "1.8.0"
  ANSIBLE_VERSION: "2.16.4"

jobs:
  provision_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Apply
        id: tfapply
        working-directory: infra
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform apply -auto-approve
          IP=$(terraform output -raw instance_public_ip)
          echo "VM_IP=$IP" >> $GITHUB_ENV
          echo "[app]"                          >  ../provision/inventory.ini
          echo "$IP ansible_user=ubuntu ansible_ssh_private_key_file=../private_key.pem" >> ../provision/inventory.ini

      - name: Setup Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible==${{ env.ANSIBLE_VERSION }} community.docker

      - name: Save SSH public key to tfvars
        run: |
          echo 'public_key = "${{ secrets.SSH_PUBLIC_KEY }}"' > infra/public_key.auto.tfvars

      - name: Run Ansible Playbook
        working-directory: provision
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          ansible-playbook -i inventory.ini playbook.yml --private-key ../private_key.pem
